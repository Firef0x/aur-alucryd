# Maintainer: alucryd <alucryd at gmail dot com>

pkgname=xbmc-devel
pkgver=13.0alpha9
_release=Gotham_alpha9
pkgrel=2
pkgdesc="XBMC Media Center - Development snapshots"
provides=('xbmc')
conflicts=('xbmc')
arch=('i686' 'x86_64')
url="http://xbmc.org/"
license=('GPL' 'LGPL')
depends=('avahi' 'bluez-libs' 'ffmpeg' 'glew' 'hicolor-icon-theme' 'libcdio' 'libmicrohttpd' 'libmariadbclient' 'libsamplerate' 'libssh' 'libxrandr' 'lzo2' 'mesa' 'python2' 'sdl_image' 'taglib' 'tinyxml' 'xorg-xdpyinfo' 'yajl')
makedepends=('afpfs-ng' 'boost' 'cmake' 'curl' 'doxygen' 'git' 'gperf' 'jasper' 'java-runtime-headless' 'libcec' 'libmad' 'libmpeg2' 'libnfs' 'libplist' 'libshairport' 'libva-vdpau-driver' 'nasm' 'smbclient' 'swig' 'unzip' 'zip')
optdepends=('afpfs-ng: Apple shares support'
            'smbclient: Windows shares support'
            'libnfs: NFS shares support'
            'libplist: AirPlay support'
            'libshairport: AirPlay support'
            'libcec: Pulse-Eight USB-CEC adapter support'
            'pulseaudio: PulseAudio support')
install="${pkgname%-*}.install"
source=("https://github.com/xbmc/xbmc/archive/$_release.tar.gz"
        'xbmc.service')
sha256sums=('ac52925ed9b1d7b8a17137d637e43833774ed96f66f1e3d1e5f2a43c960576a8'
            '547e06f3141866cd34b1df34025517e9826992b67543af7621d954bcdfa0ba94')

prepare() {
  cd xbmc-$_release

  sed 's/AM_CONFIG_HEADER/AC_CONFIG_HEADERS/g' -i lib/libdvd/libdvdcss/configure.ac
  sed 's/\(#include \)<libsmbclient\.h>/\1<samba-4.0\/libsmbclient\.h>/g' -i xbmc/filesystem/{SmbFile.cpp,SMBDirectory.cpp}
}

build() {
  cd xbmc-$_release

  ./bootstrap

# Configure options
#  --enable-shared-lib          build libxbmc. helpful for tests (default is no)
#  --enable-debug               enable debugging information (default is yes)
#  --enable-neon                enable neon passing to ffmpeg (default is no)
#  --enable-optimizations       enable optimization (default is yes)
#  --enable-gl                  enable OpenGL rendering (default is yes)
#  --enable-gles                enable OpenGLES rendering (default is no)
#  --enable-sdl                 enable SDL (default is auto)
#  --enable-vdpau               enable VDPAU decoding (default is auto)
#  --enable-vaapi               enable VAAPI decoding (default is auto)
#  --enable-crystalhd           enable CrystalHD decoding (default is auto)
#  --enable-vtbdecoder          enable VTBDecoder decoding (default is auto)
#  --enable-openmax             enable OpenMax decoding (default is auto, requires OpenGLES)
#  --enable-tegra               enable Tegra2 arm (default is no)
#  --enable-profiling           enable gprof profiling (default is no)
#  --enable-joystick            enable SDL joystick support (default is yes)
#  --enable-xrandr              enable XRandR support (default is yes)
#  --enable-waveform            enable Waveform visualisation (default is yes)
#  --enable-spectrum            enable Spectrum visualisation (default is yes)
#  --enable-goom                enable GOOM visualisation (default is no)
#  --enable-rsxs                enable really slick X screensavers (default is yes)
#  --enable-fishbmc             enable FishBMC visualisation (default is yes)
#  --enable-projectm            enable ProjectM visualisation (default is yes)
#  --enable-wayland             enable wayland (default is no) 'Linux Only'
#  --enable-x11                 enable x11 (default is yes) 'Linux Only'
#  --enable-ccache              enable building with ccache feature (default is auto)
#  --disable-alsa               disable ALSA support (only for linux/freebsd)
#  --enable-pulse               enable PulseAudio support (default is no)
#  --disable-ssh                disable SSH SFTP support (default is enabled)
#  --enable-rtmp                enable RTMP support via librtmp (default is auto)
#  --disable-samba              disable SAMBA support (default is enabled)
#  --enable-nfs                 enable NFS support via libnfs (default is auto)
#  --enable-afpclient           enable AFP support via libafpclient (default is auto)
#  --enable-airplay             enable AirPlay support(default is auto)
#  --enable-airtunes            enable AirTunes support(default is auto)
#  --disable-upnp               disable UPnP support (default is enabled)
#  --enable-ffmpeg-libvorbis    enable FFmpeg vorbis encoding (default is no)
#  --enable-dvdcss              enable DVDCSS support (default is yes)
#  --enable-mid                 enable MID support (default is no)
#  --disable-hal                disable HAL support (default is enabled if hal and hal-storage is found)
#  --disable-avahi              disable Avahi support (default is enabled if libavahi-common and libavahi-client is found)
#  --disable-mdnsembedded       disable mDNSEmbedded support (default is auto)
#  --disable-non-free           disable componentents with non-compliant licenses
#  --enable-asap-codec          enable ASAP ADPCM support
#  --disable-mysql              disable mysql
#  --disable-webserver          disable webserver
#  --disable-optical-drive      disable optical drive
#  --enable-libbluray           enable libbluray support
#  --enable-texturepacker       enable texturepacker support (default is yes)
#  --enable-udev                enable udev support (default is auto)
#  --enable-libusb              enable libusb support (default is auto)
#  --enable-libcec              enable libcec support (default is auto)
#  --enable-libmp3lame          enable lame mp3 encoder support (default is auto)
#  --enable-libvorbisenc        enable vorbis encoder support (default is auto)
#  --enable-libcap              enable libcap support (default is auto)
#  --enable-player              enable additional players from a list of comma separated names, (default is none, choices are omxplayer)
#  --enable-gtest               configure Google Test Framework (default is no)
#  --enable-codec               enable additional codecs from a list of comma separated names, (default is none, choices are amcodec, libstagefright)
#  --enable-external-libraries  enable use of all supported external libraries (default is no) 'Linux only'
#  --enable-external-ffmpeg     enable use of external ffmpeg libraries (default is no) 'Linux only'
#  --enable-libav-compat        build a wrapper around libav to provide the functions needed by XBMC. This is *not* supported by XBMC developers and is provided only for convenience. (default is no) 'Linux only'

  export PYTHON_VERSION=2
  ./configure --prefix='/usr' --exec-prefix='/usr' --enable-{external-libraries,ffmpeg-libvorbis,libbluray,libusb,pulse} --disable-debug
  make
}

package() {
  cd xbmc-$_release

  make DESTDIR="${pkgdir}" install

# Python2
  sed 's/python/python2/g' -i "${pkgdir}"/usr/{bin/xbmc,share/xbmc/addons/service.xbmc.versioncheck/service.py}

# Texture Packer
  install -m 755 {tools/TexturePacker,"${pkgdir}"/usr/lib/xbmc}/TexturePacker

# Licenses
  install -dm 755 "${pkgdir}"/usr/share/licenses/${pkgname}
  mv "${pkgdir}"/usr/share/{doc/xbmc/{LICENSE.GPL,copying.txt},licenses/${pkgname}/}

# Systemd
  install -dm 755 "${pkgdir}"/usr/lib/systemd/system
  install -m 644 {..,"${pkgdir}"/usr/lib/systemd/system}/xbmc.service
}

# vim: ts=2 sw=2 et:
