# Maintainer: Alucryd <alucryd at gmail dot com>

pkgname=nvidia-total-beta
pkgver=319.12
pkgrel=1
pkgdesc="NVIDIA drivers for linux: nvidia-utils + lib32-nvidia-utils + opencl-nvidia + lib32-opencl-nvidia + nvidia-source + nvidia-hook (DKMS) - BETA version"
arch=('i686' 'x86_64')
url="http://www.nvidia.com/"
license=('custom')
depends=('linux>=3.8' 'linux<3.9' 'dkms' 'xorg-server' 'zlib')
optdepends=('gtk2: nvidia-settings'
            'pangox-compat: nvidia-settings'
            'pkg-config: nvidia-xconfig'
            'opencl-headers: headers necessary for OpenCL development')
conflicts=('libgl' 'libcl' 'nvidia' 'nvidia-beta' 'nvidia-utils' 'nvidia-utils-beta' 'nvidia-source' 'nvidia-source-beta' 'nvidia-hook' 'opencl-nvidia')
provides=('libgl' 'libcl' "nvidia=${pkgver}" "nvidia-utils=${pkgver}" "opencl-nvidia=${pkgver}")
source=("https://raw.github.com/Alucryd/mkinitcpio-hooks/master/nvidia")
md5sums=('00509e48257c22d11b89f32357b04c4f')
options=('!strip')
install=${pkgname}.install

_multilib=true
_pkg32="NVIDIA-Linux-x86-${pkgver}"
_pkg64="NVIDIA-Linux-x86_64-${pkgver}-no-compat32"

if [[ $CARCH == i686 ]]; then
  _pkg=${_pkg32}
  source+=("http://us.download.nvidia.com/XFree86/Linux-x86/${pkgver}/${_pkg}.run")
  md5sums+=('6f8d7de1db4f0fc4675a566470c69274')
elif [[ $CARCH == x86_64 ]]; then
  _pkg=${_pkg64}
  source+=("http://us.download.nvidia.com/XFree86/Linux-x86_64/${pkgver}/${_pkg}.run")
  md5sums+=('f662eff5946a27d3dd02e9d878342c38')
  if [[ ${_multilib} == true ]]; then
    depends+=('lib32-zlib' 'lib32-libxext' 'lib32-gcc-libs')
    conflicts+=('lib32-libgl' 'lib32-libcl' 'lib32-nvidia-utils' 'lib32-nvidia-utils-beta' 'lib32-opencl-nvidia')
    provides+=('lib32-libgl' 'lib32-libcl' "lib32-nvidia-utils=${pkgver}" "lib32-opencl-nvidia=${pkgver}")
    source+=("http://us.download.nvidia.com/XFree86/Linux-x86/${pkgver}/${_pkg32}.run")
    md5sums+=('6f8d7de1db4f0fc4675a566470c69274')
  fi
fi

build() {
  cd "${srcdir}"

  if [[ -d ${_pkg} ]]; then
    rm -rf ${_pkg}
  fi
  sh ${_pkg}.run --extract-only
  if [[ $_multilib == true ]] ; then
    if [[ -d ${_pkg32} ]]; then
      rm -rf ${_pkg32}
    fi
    sh ${_pkg32}.run --extract-only
  fi
}

install_opencl() {
  cd "${srcdir}"/${_pkg}

  install -Dm 644 nvidia.icd "${pkgdir}"/etc/OpenCL/vendors/nvidia.icd
  install -Dm 755 libOpenCL.so.1.0.0 "${pkgdir}"/usr/lib/libOpenCL.so.1.0.0
  install -Dm 755 libnvidia-compiler.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-compiler.so.${pkgver}
  install -Dm 755 libnvidia-opencl.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-opencl.so.${pkgver}
}

install_opencl32() {
  cd "${srcdir}/${_pkg32}"

  install -Dm 755 libOpenCL.so.1.0.0 "${pkgdir}"/usr/lib32/libOpenCL.so.1.0.0
  install -Dm 755 libnvidia-compiler.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-compiler.so.${pkgver}
  install -Dm 755 libnvidia-compiler.so.${pkgver} "${pkgdir}"/usr/lib32/libnvidia-compiler.so.${pkgver}
  install -Dm 755 libnvidia-opencl.so.${pkgver} "${pkgdir}"/usr/lib32/libnvidia-opencl.so.${pkgver}
}

install_utils() {
  cd "${srcdir}"/${_pkg}

# X driver
  install -Dm 755 nvidia_drv.so "${pkgdir}"/usr/lib/xorg/modules/drivers/nvidia_drv.so

# GLX extension module for X
  install -Dm 755 libglx.so.${pkgver} "${pkgdir}"/usr/lib/xorg/modules/extensions/libglx.so.${pkgver}
  ln -s libglx.so.${pkgver} "${pkgdir}"/usr/lib/xorg/modules/extensions/libglx.so

# OpenGL
  install -Dm 755 libGL.so.${pkgver} "${pkgdir}"/usr/lib/libGL.so.${pkgver}
  install -Dm 755 libnvidia-glcore.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-glcore.so.${pkgver}

# VDPAU
  install -Dm 755 libvdpau_nvidia.so.${pkgver} "${pkgdir}"/usr/lib/vdpau/libvdpau_nvidia.so.${pkgver}

# Other libraries
  install -Dm 755 tls/libnvidia-tls.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-tls.so.${pkgver}
  install -Dm 755 libnvidia-cfg.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-cfg.so.${pkgver}
  install -Dm 755 libnvidia-ml.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-ml.so.${pkgver}
  install -Dm 755 libnvidia-wfb.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-wfb.so.${pkgver}
  install -Dm 755 libnvidia-encode.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-encode.so.${pkgver}

# CUDA
  install -Dm 755 libcuda.so.${pkgver} "${pkgdir}"/usr/lib/libcuda.so.${pkgver}
  install -Dm 755 libnvcuvid.so.${pkgver} "${pkgdir}"/usr/lib/libnvcuvid.so.${pkgver}

# nvidia-xconfig
  install -Dm 755 nvidia-xconfig "${pkgdir}"/usr/bin/nvidia-xconfig
  install -Dm 644 nvidia-xconfig.1.gz "${pkgdir}"/usr/share/man/man1/nvidia-xconfig.1.gz

# nvidia-settings
  install -Dm 755 nvidia-settings "${pkgdir}"/usr/bin/nvidia-settings
  install -Dm 644 nvidia-settings.1.gz "${pkgdir}"/usr/share/man/man1/nvidia-settings.1.gz
  install -Dm 644 nvidia-settings.desktop "${pkgdir}"/usr/share/applications/nvidia-settings.desktop
  install -Dm 644 nvidia-settings.png "${pkgdir}"/usr/share/pixmaps/nvidia-settings.png
  sed -e 's:__UTILS_PATH__:/usr/bin:' -e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' -i "${pkgdir}"/usr/share/applications/nvidia-settings.desktop

# nvidia-bug-report
  install -Dm 755 nvidia-bug-report.sh "${pkgdir}"/usr/bin/nvidia-bug-report.sh

# nvidia-smi
  install -Dm 755 nvidia-smi "${pkgdir}"/usr/bin/nvidia-smi
  install -Dm 644 nvidia-smi.1.gz "${pkgdir}"/usr/share/man/man1/nvidia-smi.1.gz

# Docs and license
  install -Dm 644 LICENSE "${pkgdir}"/usr/share/licenses/nvidia/LICENSE
  ln -s nvidia "${pkgdir}"/usr/share/licenses/nvidia-total-beta
  install -Dm 644 README.txt "${pkgdir}"/usr/share/doc/nvidia/README
  install -Dm 644 NVIDIA_Changelog "${pkgdir}"/usr/share/doc/nvidia/NVIDIA_Changelog
  ln -s nvidia "${pkgdir}"/usr/share/doc/nvidia-total-beta

  create_links
}

install_utils32() {
  cd "${srcdir}"/${_pkg32}

# OpenGL
  install -Dm 755 libGL.so.${pkgver} "${pkgdir}"/usr/lib32/libGL.so.${pkgver}
  install -Dm 755 libnvidia-glcore.so.${pkgver} "${pkgdir}"/usr/lib32/libnvidia-glcore.so.${pkgver}

# VDPAU
  install -Dm 755 libvdpau_nvidia.so.${pkgver} "${pkgdir}"/usr/lib32/vdpau/libvdpau_nvidia.so.${pkgver}

# tls, cfg and ml libraries
  install -Dm 755 tls/libnvidia-tls.so.${pkgver} "${pkgdir}"/usr/lib32/libnvidia-tls.so.${pkgver}
  install -Dm 755 libnvidia-cfg.so.${pkgver} "${pkgdir}"/usr/lib32/libnvidia-cfg.so.${pkgver}
  install -Dm 755 libnvidia-ml.so.${pkgver} "${pkgdir}"/usr/lib32/libnvidia-ml.so.${pkgver}

# CUDA
  install -Dm 755 libcuda.so.${pkgver} "${pkgdir}"/usr/lib32/libcuda.so.${pkgver}
  install -Dm 755 libnvcuvid.so.${pkgver} "${pkgdir}"/usr/lib32/libnvcuvid.so.${pkgver}
}

install_source() {
  cd "${srcdir}"/${_pkg}/kernel

  install -dm 755 "${pkgdir}"/usr/src/nvidia-${pkgver}
  cp -dr --no-preserve=ownership * "${pkgdir}"/usr/src/nvidia-${pkgver}/
  chmod 644 "${pkgdir}"/usr/src/nvidia-${pkgver}/*
  chmod 755 "${pkgdir}"/usr/src/nvidia-${pkgver}/*.sh
}

install_hook() {
  cd "${srcdir}"
  install -dm 755 "${pkgdir}"/usr/lib/{modprobe.d,initcpio/install}
  echo "blacklist nouveau" >> "${pkgdir}"/usr/lib/modprobe.d/nvidia.conf
  chmod 644 "${pkgdir}"/usr/lib/modprobe.d/nvidia.conf
  sed -i "s|_arch|$CARCH|" nvidia
  install -m 644 nvidia "${pkgdir}"/usr/lib/initcpio/install/nvidia
}

create_links() {
  while read -d '' _lib ; do
    _soname="$(dirname "${_lib}")/$(LC_ALL=C readelf -d "${_lib}" | sed -nr 's/.*Library soname: \[(.*)\].*/\1/p')"
    [[ -e "${_soname}" ]] || ln -s "$(basename "${_lib}")" "${_soname}"
    [[ -e "${_soname/.[0-9]*/}" ]] || ln -s "$(basename "${_soname}")" "${_soname/.[0-9]*/}"
  done < <(find "${pkgdir}" -type f -name '*.so*' -print0)
}

package() {
  install_opencl
  install_utils
  install_source
  install_hook
  if [[ $_multilib == true ]]; then
    install_opencl32
    install_utils32
  fi
  create_links
}

# vim: ts=2 sw=2 et:
