=== modified file 'terra/preferences.py'
--- terra/preferences.py	2013-03-14 19:12:01 +0000
+++ terra/preferences.py	2013-07-25 22:55:54 +0000
@@ -131,6 +131,7 @@
 
         self.font_name = builder.get_object('font_name')
         self.font_name.set_font_name(ConfigManager.get_conf('font-name'))
+        self.font_name.set_sensitive(not ConfigManager.get_conf('use-default-font'))
 
         self.chk_use_system_font = builder.get_object('chk_use_system_font')
         self.chk_use_system_font.connect('toggled', lambda w: self.toggle_sensitive(self.chk_use_system_font, [self.font_name]))

=== modified file 'terra/terminal.py'
--- terra/terminal.py	2013-03-14 19:12:01 +0000
+++ terra/terminal.py	2013-07-25 22:57:01 +0000
@@ -157,7 +157,7 @@
             msgbox.destroy()
             ConfigManager.disable_losefocus_temporary = False
 
-            if response == Gtk.ResponseType.NO:
+            if response != Gtk.ResponseType.YES:
                 return False
 
         if ConfigManager.get_conf('remember-tab-names'):
@@ -511,23 +511,26 @@
             Gtk.main_iteration()
         Gdk.flush()
 
-    def slide_up(self):
+    def slide_up(self, i=0):
         self.slide_effect_running = True
         step = ConfigManager.get_conf('step-count')
         win_rect = self.get_allocation()
         height, width = win_rect.height, win_rect.width
         if self.get_window() != None:
             self.get_window().enable_synchronized_configure()
-        for i in range(1, step):
+        if i < step+1:
             self.resize(width, height - int(((height/step) * i)))
             self.queue_resize()
             self.update_events()
-            time.sleep( ConfigManager.get_conf('step-time') / 1000.0)
+            GObject.timeout_add(ConfigManager.get_conf('step-time'), self.slide_up, i+1)
+        else:
+            self.hide()
+            self.unrealize()
         if self.get_window() != None:
             self.get_window().configure_finished()
         self.slide_effect_running = False
 
-    def slide_down(self):
+    def slide_down(self, i=1):
         step = ConfigManager.get_conf('step-count')
         self.slide_effect_running = True
         screen_rectangle = self.get_screen_rectangle()
@@ -535,13 +538,13 @@
         height = floor(ConfigManager.get_conf('height') * screen_rectangle.height / 100.0)
         if self.get_window() != None:
             self.get_window().enable_synchronized_configure()
-        for i in range(1, step+1):
+        if i < step + 1:
             self.resize(width, int(((height/step) * i)))
             self.queue_resize()
             self.resizer.set_property('position', int(((height/step) * i)))
             self.resizer.queue_resize()
             self.update_events()
-            time.sleep( ConfigManager.get_conf('step-time') / 1000.0)
+            GObject.timeout_add(ConfigManager.get_conf('step-time'), self.slide_down, i+1)
         if self.get_window() != None:
             self.get_window().configure_finished()
         self.slide_effect_running = False
@@ -556,8 +559,6 @@
         if self.get_visible():
             if ConfigManager.get_conf('use-animation'):
                 self.slide_up()
-            self.hide()
-            self.unrealize() 
             return
         else:
             if ConfigManager.get_conf('use-animation'):

